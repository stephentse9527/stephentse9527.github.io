{"title":"英文面试合集","uid":"727fdd30d270ab93f20b48b627af8396","slug":"英文面试合集","date":"2021-06-05T11:16:08.000Z","updated":"2022-09-15T14:22:17.564Z","comments":true,"path":"api/articles/英文面试合集.json","keywords":null,"cover":null,"content":"<h1 id=\"英文面试合集\"><a href=\"#英文面试合集\" class=\"headerlink\" title=\"英文面试合集\"></a>英文面试合集</h1><h4 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h4><pre class=\"line-numbers language-tiddlywiki\" data-language=\"tiddlywiki\"><code class=\"language-tiddlywiki\">Good afternon sir&#x2F;madam, it&#39;s my pleasure to introduce myself. My name&#39;s Xiehuake, In the summer of 2021, I graduated from Zhengzhou University of Light Industry with a bachelor’s degree in Computer Science and Technology.After graduation, I started my career as a Recommondation system engineer at ZP LAB in Beijing city.As a Java Dep, I have a core Java based,good programming style,kown about CICD workflow and Agile software development, and I familiar with Spring reids kafka Es and other famours open source framework.And i also familiar with Java multi-thread programming and read the source code of Java current Utils pakage.And  I’m experienced with high concurrency and high availability architecture practice.\n\nAs for my personal qualities, I’m very self-driven, responsible and hardworking. I like to read book or online blog to brush up on my skills in my free time. I’m a good team player and I believe I have the combination of experience to contribute to the success of this job. That’s all. Thank you for your listening.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"项目介绍\"><a href=\"#项目介绍\" class=\"headerlink\" title=\"项目介绍\"></a>项目介绍</h4><pre class=\"line-numbers language-wiki\" data-language=\"wiki\"><code class=\"language-wiki\">The project I'm going to introduce is called the ZHIPIN LAB recommendation system.  It's a subclass of information filtering systems that predict the preference for job-seeker or company .In simple words, it is a System that suggests most instersting items to users.\n\nIn this project, It consists of multiple levels, the first levels is AB Testing, also known as split testing, it's in order to compare two versions of strategy to see which performs better.\n\nAnd then the next lary is recall, after get the strategys from AB Testing, we search Top-1000 items from tens of millions  data by  elasticsearch with each subrecall strategy. by the way, the  subrecall services exists in the form of Dubbo remote service and local plug-in, other level is also too. \n\n\nAnd we fusion the data from each recall, by fusion strategy. also keep top-1000 items, and next step we fill these items into rank system to predict the item score and get the top-200.\n\nafter sorting, we sort item one more time, becase we have to controlle some item position in page by our business strategy. In the end we store the item in redis cache, and return  the result, when the same user request the next page, we dont run the recmoond logic once again, but get result from redis to reutrn. And in each Level, we use elk to log major info, such as cost time or data middle status to help we analysis when we get bad case.\n\nthis project run in average 600 QPS and max 1000 QSP envement, and it keep tp999 in 200ms.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>fourteen million job-seeker</p>\n<p>nine million job</p>\n<h4 id=\"项目难点\"><a href=\"#项目难点\" class=\"headerlink\" title=\"项目难点\"></a>项目难点</h4><pre class=\"line-numbers language-wiki\" data-language=\"wiki\"><code class=\"language-wiki\">This project has many level, and the total request time required cannot exceed 300 milliseconds, and each levele cannot be parallelized. I mainly develop the recall layer,Recalls are time-consuming because the data size is hight, and this are many recall should be run, so in recall level, i use I use multi threadi to execute thoses recall and use thread pool to controller, and set the threadpool core size is the cpu cores size plus one, to avoid Threads compete for resources，and i Increase the eland to 1g, <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h4 id=\"Java基础\"><a href=\"#Java基础\" class=\"headerlink\" title=\"Java基础\"></a>Java基础</h4><h5 id=\"1-What-are-the-concepts-of-OOP\"><a href=\"#1-What-are-the-concepts-of-OOP\" class=\"headerlink\" title=\"1.What are the concepts of OOP?\"></a>1.What are the concepts of OOP?</h5><p>Object Oriented Programming (OOP) includes:</p>\n<ul>\n<li>Abstraction 抽象</li>\n<li>Encapsulation 封装</li>\n<li>Polymorphism 多态</li>\n<li>Inheritance 继承</li>\n</ul>\n<h5 id=\"2-Mention-some-features-of-Java\"><a href=\"#2-Mention-some-features-of-Java\" class=\"headerlink\" title=\"2.Mention some features of Java\"></a>2.Mention some features of Java</h5><p>Some of the features which play important role in the popularity of java are as follows:</p>\n<ul>\n<li>Object-Oriented</li>\n<li>Platform independent</li>\n</ul>\n<h5 id=\"3-Is-Java-100-Object-oriented\"><a href=\"#3-Is-Java-100-Object-oriented\" class=\"headerlink\" title=\"3.Is Java 100% Object-oriented?\"></a>3.Is Java 100% Object-oriented?</h5><p>Not 100%. Java does not satisfy all the OOP conditions (predefined types must be objects) because it uses eight primitive data types(Boolean, byte, char, int, float, double, long, short) which are not objects.</p>\n<h5 id=\"4-what-is-Abstraction\"><a href=\"#4-what-is-Abstraction\" class=\"headerlink\" title=\"4. what is Abstraction?\"></a>4. what is Abstraction?</h5><p>The abstraction wants to separate the implementation details of a class from its behavior.</p>\n<h5 id=\"5-What-is-Encapsulation-封装\"><a href=\"#5-What-is-Encapsulation-封装\" class=\"headerlink\" title=\"5.What is Encapsulation? 封装\"></a>5.What is Encapsulation? 封装</h5><p>Encapsulation provides objects with the ability to hide their internal data and behavior，each object provides a number of methods,which can be accessed by other objects and change its internal data,in Java, there are three access modifiers: public, private and protected,</p>\n<h5 id=\"6-What-is-Inheritance-继承\"><a href=\"#6-What-is-Inheritance-继承\" class=\"headerlink\" title=\"6.What is Inheritance 继承\"></a>6.What is Inheritance 继承</h5><p>acquire the fields and methods of another class,Inheritance provides reusability of code and can be used to add additional features to an existing class, without modifying it.</p>\n<h5 id=\"7-What-is-a-Constructor\"><a href=\"#7-What-is-a-Constructor\" class=\"headerlink\" title=\"7.What is a Constructor?\"></a>7.What is a Constructor?</h5><p>A constructor gets invoked when a new object is created. Every class<a href=\"https://www.javacodegeeks.com/2014/01/which-is-better-option-cloning-or-copy-constructors.html\"> has a constructor</a>. In case the programmer does not provide a constructor for a class, the Java compiler (Javac) creates a default constructor for that class.</p>\n<h5 id=\"8-What-is-the-difference-between-an-Interface-and-an-Abstract-class\"><a href=\"#8-What-is-the-difference-between-an-Interface-and-an-Abstract-class\" class=\"headerlink\" title=\"8.What is the difference between an Interface and an Abstract class?\"></a>8.What is the difference between an Interface and an Abstract class?</h5><p>Java provides and supports the creation of both the<a href=\"http://examples.javacodegeeks.com/java-basics/java-abstract-class-example/\"> abstract classes</a> and interfaces. Both implementations share some common characteristics, but they differ in the following features:</p>\n<ul>\n<li>All methods in an interface are implicitly abstract. On the other hand, an abstract class may contain both abstract and non-abstract methods.</li>\n<li>A class may implement a number of Interfaces but can extend only one abstract class.</li>\n<li>In order for a class to implement an interface, it must implement all its declared methods. However, a class may not implement all declared methods of an abstract class. Though, in this case, the sub-class must also be declared as abstract.</li>\n<li>Abstract classes can implement interfaces without even providing the implementation of interface methods.</li>\n<li>Variables declared in a Java interface is by default final. An abstract class may contain non-final variables.</li>\n<li>Members of a Java interface are public by default. A member of an abstract class can either be private, protected or public.</li>\n<li>An interface is absolutely abstract and cannot be instantiated. An abstract class also cannot be instantiated but can be invoked if it contains the main method.</li>\n</ul>\n<h5 id=\"9-What-is-the-purpose-of-a-Volatile-Variable\"><a href=\"#9-What-is-the-purpose-of-a-Volatile-Variable\" class=\"headerlink\" title=\"9.What is the purpose of a Volatile Variable\"></a>9.What is the purpose of a Volatile Variable</h5><p>aviod reorderding and add memory visibility to each cpu core. some variable can be modified by different threads, and each thread run in the one of cup core, and there is l1 l2 l3 cache in one core, when core acc varilable, it copy the value into the cache, and modify it, and reflush it to share memory, so in mutiple thread, the value mighth be cover by other thread, so add Volatile  modifier</p>\n<h5 id=\"10-Explain-the-available-thread-states-in-a-high-level\"><a href=\"#10-Explain-the-available-thread-states-in-a-high-level\" class=\"headerlink\" title=\"10.Explain the available thread states in a high-level.\"></a>10.Explain the available thread states in a high-level.</h5><p>During its execution, a thread can reside in one of the following<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html\"> states</a>:</p>\n<ul>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#NEW\">NEW</a>: The thread becomes ready to run, but does not necessarily start running immediately.</li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#RUNNABLE\">RUNNABLE</a>: The Java Virtual Machine (JVM) is actively executing the thread’s code.</li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#BLOCKED\">BLOCKED</a>: The thread is in a blocked state while waiting for a monitor lock.</li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#WAITING\">WAITING</a>: The thread waits for another thread to perform a particular action.</li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#TIMED_WAITING\">TIMED_WAITING</a>: The thread waits for another thread to perform a particular action up to a specified waiting time.</li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#TERMINATED\">TERMINATED</a>: The thread has finished its execution</li>\n</ul>\n<h5 id=\"11-what-is-necessary-Conditions-of-Deadlock\"><a href=\"#11-what-is-necessary-Conditions-of-Deadlock\" class=\"headerlink\" title=\"11.what is necessary Conditions of Deadlock\"></a>11.what is necessary Conditions of Deadlock</h5><ul>\n<li><em><strong>Mutual Exclusion:</strong></em> Two or more resources are non-shareable (Only one process can use at a time) </li>\n<li><em><strong>Hold and Wait:</strong></em> A process is holding at least one resource and waiting for resources. </li>\n<li><em><strong>No Preemption:</strong></em> A resource cannot be taken from a process unless the process releases the resource. </li>\n<li><em><strong>Circular Wait:</strong></em> A set of processes are waiting for each other in circular form. </li>\n</ul>\n<h5 id=\"12-What-is-the-purpose-of-garbage-collection-in-Java-and-when-is-it-used\"><a href=\"#12-What-is-the-purpose-of-garbage-collection-in-Java-and-when-is-it-used\" class=\"headerlink\" title=\"12.What is the purpose of garbage collection in Java, and when is it used\"></a>12.What is the purpose of garbage collection in Java, and when is it used</h5><p> identify and discard those objects that are no longer needed by the application, in order for the resources to be reclaimed and reused</p>\n<h5 id=\"13-synchronized\"><a href=\"#13-synchronized\" class=\"headerlink\" title=\"13.synchronized\"></a>13.synchronized</h5><ul>\n<li>1 unlocked</li>\n<li>2 Biased locking</li>\n<li>3 Lightweight lock</li>\n<li>4 Heavyweight lock</li>\n</ul>\n<h5 id=\"14-MySQL-ACID\"><a href=\"#14-MySQL-ACID\" class=\"headerlink\" title=\"14.MySQL ACID\"></a>14.MySQL ACID</h5><ul>\n<li><strong>A</strong>: atomicity. ea de mi xi ti  : Each transaction is considered as one unit and either runs to completion or is not executed at all</li>\n<li><strong>C</strong>: consistency. 肯西死ten 洗 this mean in one transaction, it ensures same query will return the smame result</li>\n<li><strong>I:</strong>: isolation. 爱西雷神 multiple transactions c</li>\n<li><strong>D</strong>: durability. 滴eo逼了第：ensures that once the transaction has completed execution，and never lost</li>\n</ul>\n<h4 id=\"JVM\"><a href=\"#JVM\" class=\"headerlink\" title=\"JVM\"></a>JVM</h4><h5 id=\"1-What-is-the-difference-between-JVM-JRE-and-JDK\"><a href=\"#1-What-is-the-difference-between-JVM-JRE-and-JDK\" class=\"headerlink\" title=\"1.What is the difference between JVM, JRE and JDK\"></a>1.What is the difference between JVM, JRE and JDK</h5><p> is a virtual machine that understands and runs java bytecodes.</p>\n<h5 id=\"2-What-is-JRE\"><a href=\"#2-What-is-JRE\" class=\"headerlink\" title=\"2.What is JRE?\"></a>2.What is JRE?</h5><p>java runtime environmen,provides an implementation of the JVM, supporting libraries and other components required to run Java programs</p>\n<h5 id=\"3-What-is-JDK\"><a href=\"#3-What-is-JDK\" class=\"headerlink\" title=\"3.What is JDK\"></a>3.What is JDK</h5><p>Java Development Kit, contains the JRE plus tools such as compilers, debuggers etc. which are required for developers to develop Java programs.</p>\n<h4 id=\"4-What-are-Java-class-loaders-What-are-the-key-features-of-Java-class-loader\"><a href=\"#4-What-are-Java-class-loaders-What-are-the-key-features-of-Java-class-loader\" class=\"headerlink\" title=\"4.What are Java class loaders? What are the key features of Java class loader\"></a>4.What are Java class loaders? What are the key features of Java class loader</h4><p>Java class loaders are components in JVM that load Java class file at runtime,Each class loader has its own specific namespace, in which it stores the classes that it loads.</p>\n<p>Features:</p>\n<ul>\n<li><p><strong>Delegation model</strong> :Before a class loader loads a class, it check if its  parent class loader can load the class, if the  parent class loader can load, then the class load by pranet, if not, the child class loader try to load the class, </p>\n</li>\n<li><p>Bootstrap class loader , Extension class loader, application class loader, user defined class loader</p>\n</li>\n</ul>\n<h4 id=\"5-What-are-the-benefits-and-negatives-of-the-garbage-collector\"><a href=\"#5-What-are-the-benefits-and-negatives-of-the-garbage-collector\" class=\"headerlink\" title=\"5.What are the benefits and negatives of the garbage collector\"></a>5.What are the benefits and negatives of the garbage collector</h4><ul>\n<li>on the positive size:<ul>\n<li>the developer can worry much less about memory management </li>\n<li>the gc has a lot of smart algorithms for memory management which work automatically in the background</li>\n</ul>\n</li>\n<li>on the negative size:<ul>\n<li>when a garbage collection occurs it has an effect on the application performance, which slowing it down or stopping it.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"6-What-is-“stop-the-world”\"><a href=\"#6-What-is-“stop-the-world”\" class=\"headerlink\" title=\"6.What is “stop the world”\"></a>6.What is “stop the world”</h4><p>when a gc happens it is necessary to completely pause the threads in an application,this is known as stop the world</p>\n<h4 id=\"7-What-is-new-generation\"><a href=\"#7-What-is-new-generation\" class=\"headerlink\" title=\"7.What is new generation\"></a>7.What is new generation</h4><p>most applications have a lot of short lived objects,so it therefore makes sense to separate the shortlived objects so that they can be quickly collected.as a result all new objects are placed into the new generation. new gen is split up further</p>\n<ul>\n<li><p><strong>eden space</strong>: all new objects are placed in here.  when it becomes full, a <strong>minor gc</strong> occurs.  all objects that are still referenced are then promoted to a <strong>survivor space</strong></p>\n</li>\n<li><p>two survivor spaces, a from space and a to space. during each collection these will swap roles, with all <strong>promoted</strong> eden objects and surviving objects move to the to space, leaving from empty。</p>\n</li>\n</ul>\n<h4 id=\"8-collector\"><a href=\"#8-collector\" class=\"headerlink\" title=\"8.collector\"></a>8.collector</h4><ul>\n<li><strong>serial gc</strong>：designed when computers only had one cpu and stops the entire application,because it only use one thread, it use it uses <strong>mark-sweep-compact</strong></li>\n<li><strong>parallel gc</strong>: similar to serial, except that it uses multiple threads to perform the gc so should be faster.</li>\n</ul>\n<h4 id=\"CICD\"><a href=\"#CICD\" class=\"headerlink\" title=\"CICD\"></a>CICD</h4><h5 id=\"CI-持续集成（Continuous-Integration）\"><a href=\"#CI-持续集成（Continuous-Integration）\" class=\"headerlink\" title=\"CI 持续集成（Continuous Integration）\"></a>CI 持续集成（Continuous Integration）</h5><p>中文：帮助开发人员更加频繁地（有时甚至每天）将代码更改合并到共享分支或”主干”中。一旦开发人员对应用所做的更改被合并，系统就会通过自动构建应用并运行不同级别的自动化测试（通常是单元测试和集成测试）来验证这些更改，那问题：那开发到一半的代码怎么办？</p>\n<p>CI and CD stand for continuous integration and continuous delivery, CI is a software development practice that automated build-and-test steps triggered by CI ensure that code changes being merged into the repository auto.</p>\n<h5 id=\"CD-持续交付（Continuous-Delivery）\"><a href=\"#CD-持续交付（Continuous-Delivery）\" class=\"headerlink\" title=\"CD 持续交付（Continuous Delivery）\"></a>CD 持续交付（Continuous Delivery）</h5><p> The code is then delivered quickly as a part of the CD process</p>\n<h5 id=\"What-are-the-benefits-of-CI-CD\"><a href=\"#What-are-the-benefits-of-CI-CD\" class=\"headerlink\" title=\"What are the benefits of CI/CD?\"></a>What are the benefits of CI/CD?</h5><ul>\n<li>Automated testing enables continuous delivery, which ensures software quality of code in production.</li>\n<li>CI/CD enable a much shorter time to market for new product features</li>\n<li>Automation frees team members to focus on what they do best</li>\n</ul>\n<h5 id=\"What-is-Agile\"><a href=\"#What-is-Agile\" class=\"headerlink\" title=\"What is Agile\"></a>What is Agile</h5><p>Agile software development .a set of engineering best practices intended to allow for fast delivery of high-quality software, and a business approach that aligns development with customer needs and company goals. Agile development refers to any development process that is aligned with the concepts </p>\n<h5 id=\"敏捷开发五大工作\"><a href=\"#敏捷开发五大工作\" class=\"headerlink\" title=\"敏捷开发五大工作\"></a>敏捷开发五大工作</h5><ul>\n<li>sprint planning meeting 类似需求评审</li>\n<li>daily standupdo meeting 同步进度</li>\n<li>sprint review 回顾冲刺</li>\n</ul>\n<h5 id=\"什么是TDD（测试驱动开发）\"><a href=\"#什么是TDD（测试驱动开发）\" class=\"headerlink\" title=\"什么是TDD（测试驱动开发）\"></a>什么是TDD（测试驱动开发）</h5><ul>\n<li>Test-Driven-Dev 在开发功能之前，先编写测试用例，然后编写可以通过测试用例的代码</li>\n</ul>\n<h5 id=\"WHAT-IS-SCRUM\"><a href=\"#WHAT-IS-SCRUM\" class=\"headerlink\" title=\"WHAT IS SCRUM?\"></a>WHAT IS SCRUM?</h5><p>Scrum is a subset of Agile. It is a lightweight process framework for agile development, and the most widely-used one.</p>\n<h5 id=\"SCURM-rule\"><a href=\"#SCURM-rule\" class=\"headerlink\" title=\"SCURM rule\"></a>SCURM rule</h5><ul>\n<li>SCURM MASTER</li>\n<li>PRODUCT OWNER</li>\n<li>SCURM TEAM</li>\n</ul>\n<h4 id=\"Design-Patterns\"><a href=\"#Design-Patterns\" class=\"headerlink\" title=\"Design Patterns\"></a>Design Patterns</h4><p><a href=\"https://www.tutorialspoint.com/design_pattern/builder_pattern.htm\">https://www.tutorialspoint.com/design_pattern/builder_pattern.htm</a></p>\n<h5 id=\"What-is-Design-Patterns\"><a href=\"#What-is-Design-Patterns\" class=\"headerlink\" title=\"What is Design Patterns?\"></a>What is Design Patterns?</h5><p>Design patterns are solutions to general problems that software developers faced during software development.</p>\n<h5 id=\"Types-of-Design-Patterns\"><a href=\"#Types-of-Design-Patterns\" class=\"headerlink\" title=\"Types of Design Patterns\"></a>Types of Design Patterns</h5><table>\n<thead>\n<tr>\n<th>S.N.</th>\n<th>Pattern &amp; Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td><strong>Creational Patterns</strong> These design patterns provide a way to create objects while hiding the creation logic, rather than create objects directly using new operator. This gives program more flexibility in deciding which objects need to be created for a given use case.</td>\n</tr>\n<tr>\n<td>2</td>\n<td><strong>Structural Patterns</strong> These design patterns concern object composition. Concept of inheritance is used to compose interfaces and define ways to compose objects to obtain new functionalities.</td>\n</tr>\n<tr>\n<td>3</td>\n<td><strong>Behavioral Patterns</strong> These design patterns are specifically concerned with communication between objects.</td>\n</tr>\n<tr>\n<td>4</td>\n<td><strong>J2EE Patterns</strong> These design patterns are specifically concerned with the presentation tier. These patterns are identified by Sun Java Center.</td>\n</tr>\n</tbody></table>\n<h5 id=\"Design-Pattern-Factory-Pattern\"><a href=\"#Design-Pattern-Factory-Pattern\" class=\"headerlink\" title=\"Design Pattern - Factory Pattern\"></a>Design Pattern - Factory Pattern</h5><p>In Factory pattern, we create object without exposing the creation logic to the client and refer to newly created object using a common interface</p>\n<h5 id=\"Design-Pattern-Abstract-Factory-Pattern\"><a href=\"#Design-Pattern-Abstract-Factory-Pattern\" class=\"headerlink\" title=\"Design Pattern - Abstract Factory Pattern\"></a>Design Pattern - Abstract Factory Pattern</h5><p>Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories</p>\n<h5 id=\"Design-Pattern-Singleton-Pattern\"><a href=\"#Design-Pattern-Singleton-Pattern\" class=\"headerlink\" title=\"Design Pattern - Singleton Pattern\"></a>Design Pattern - Singleton Pattern</h5><p>This pattern involves a single class which is responsible to create an object while making sure that only single object gets created. This class provides a way to access its only object which can be accessed directly without need to instantiate the object of the class.</p>\n<h5 id=\"Design-Pattern-Builder-Pattern\"><a href=\"#Design-Pattern-Builder-Pattern\" class=\"headerlink\" title=\"Design Pattern - Builder Pattern\"></a>Design Pattern - Builder Pattern</h5><p>Builder pattern builds a complex object using simple objects and using a step by step approach</p>\n<h5 id=\"Design-Patterns-Adapter-Pattern\"><a href=\"#Design-Patterns-Adapter-Pattern\" class=\"headerlink\" title=\"Design Patterns - Adapter Pattern\"></a>Design Patterns - Adapter Pattern</h5><p>Adapter pattern works as a bridge between two incompatible interfaces.</p>\n<h5 id=\"Design-Patterns-Proxy-Pattern\"><a href=\"#Design-Patterns-Proxy-Pattern\" class=\"headerlink\" title=\"Design Patterns - Proxy Pattern\"></a>Design Patterns - Proxy Pattern</h5><p>In proxy pattern, a class represents functionality of another class. This type of design pattern comes under structural pattern.</p>\n<p>In proxy pattern, we create object having original object to interface its functionality to outer world.</p>\n<h5 id=\"Design-Patterns-Strategy-Pattern\"><a href=\"#Design-Patterns-Strategy-Pattern\" class=\"headerlink\" title=\"Design Patterns - Strategy Pattern\"></a>Design Patterns - Strategy Pattern</h5><p>In Strategy pattern, a class behavior or its algorithm can be changed at run time</p>\n<h5 id=\"Design-Patterns-Strategy-Pattern-1\"><a href=\"#Design-Patterns-Strategy-Pattern-1\" class=\"headerlink\" title=\"Design Patterns - Strategy Pattern\"></a>Design Patterns - Strategy Pattern</h5><h4 id=\"SOLID-principles\"><a href=\"#SOLID-principles\" class=\"headerlink\" title=\"SOLID principles\"></a>SOLID principles</h4><ol>\n<li><p><strong>S</strong>ingle Responsibility</p>\n<p> <strong>S</strong>ingle Responsibility states that <strong>a class should only have one responsibility. Furthermore, it should only have one reason to change</strong></p>\n</li>\n<li><p><strong>O</strong>pen/Closed</p>\n</li>\n</ol>\n<p>​        Open for Extension, Closed for Modification</p>\n<ol start=\"3\">\n<li><p><strong>L</strong>iskov Substitution</p>\n<p><em>states that objects of a superclass should be replaceable with objects of its subclasses without breaking the application</em></p>\n</li>\n<li><p><strong>I</strong>nterface Segregation</p>\n<p>larger interfaces should be split into smaller ones</p>\n</li>\n<li><p><strong>D</strong>ependency Inversion</p>\n<p>Refers to the decoupling of software modules,     modules comniucation will depend to abstractions not implementation.</p>\n</li>\n</ol>\n<h4 id=\"反问\"><a href=\"#反问\" class=\"headerlink\" title=\"反问\"></a>反问</h4><h5 id=\"1-What-challenges-will-I-encounter-in-this-position\"><a href=\"#1-What-challenges-will-I-encounter-in-this-position\" class=\"headerlink\" title=\"1.What challenges will I encounter in this position\"></a>1.What challenges will I encounter in this position</h5><p>book</p>\n<p>How to Win Friends</p>\n<p>algorithm 4 base with java </p>\n<h4 id=\"单词发音\"><a href=\"#单词发音\" class=\"headerlink\" title=\"单词发音\"></a>单词发音</h4><table>\n<thead>\n<tr>\n<th>Word</th>\n<th>Phonetic</th>\n<th>Translation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>career</td>\n<td>kəˈrɪə</td>\n<td>职业生涯</td>\n</tr>\n<tr>\n<td>graduated</td>\n<td>ˈgræʤuːeɪtɪd</td>\n<td>毕业</td>\n</tr>\n<tr>\n<td>bachelor</td>\n<td>bæʧələ</td>\n<td>学士</td>\n</tr>\n<tr>\n<td>pleasure</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>familiar</td>\n<td>fəˈmɪljə</td>\n<td></td>\n</tr>\n<tr>\n<td>framework</td>\n<td>ˈfreɪmwɜːk</td>\n<td></td>\n</tr>\n<tr>\n<td>experienced</td>\n<td>ɪkˈspɪəriːənst</td>\n<td></td>\n</tr>\n<tr>\n<td>concurrency</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>availability</td>\n<td>əˌveɪləˈbɪlətiː</td>\n<td></td>\n</tr>\n<tr>\n<td>architecture</td>\n<td>ˈɑːkətekʧə</td>\n<td></td>\n</tr>\n<tr>\n<td>driven</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>enthusiasm</td>\n<td>ɪnˈθjuːziːæzəm</td>\n<td></td>\n</tr>\n<tr>\n<td>analysis</td>\n<td>əˈnæləsɪs</td>\n<td></td>\n</tr>\n<tr>\n<td>oriented</td>\n<td>ˈɔːriːəntɪd</td>\n<td></td>\n</tr>\n<tr>\n<td>Encapsulation</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>occurs</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>promoted</td>\n<td>prəˈmōt</td>\n<td>晋升</td>\n</tr>\n<tr>\n<td>Integration</td>\n<td>ˌɪntɪˈgreɪʃən</td>\n<td>一体化</td>\n</tr>\n<tr>\n<td>Delivery</td>\n<td>dɪˈlɪvəri</td>\n<td>交付</td>\n</tr>\n<tr>\n<td>initialization</td>\n<td>[ɪˌnɪʃələˈzeɪʃn]</td>\n<td>刷</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n","feature":null,"text":"英文面试合集自我介绍Good afternon sir&#x2F;madam, it&#39;s my pleasure to introduce myself. My name&#39;s Xiehuake, In the summer of 2021, I graduated...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[],"tags":[{"name":"面试","slug":"面试","count":3,"path":"api/tags/面试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8B%B1%E6%96%87%E9%9D%A2%E8%AF%95%E5%90%88%E9%9B%86\"><span class=\"toc-text\">英文面试合集</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">自我介绍</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">项目介绍</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E9%9A%BE%E7%82%B9\"><span class=\"toc-text\">项目难点</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Java%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">Java基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-What-are-the-concepts-of-OOP\"><span class=\"toc-text\">1.What are the concepts of OOP?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-Mention-some-features-of-Java\"><span class=\"toc-text\">2.Mention some features of Java</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-Is-Java-100-Object-oriented\"><span class=\"toc-text\">3.Is Java 100% Object-oriented?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-what-is-Abstraction\"><span class=\"toc-text\">4. what is Abstraction?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-What-is-Encapsulation-%E5%B0%81%E8%A3%85\"><span class=\"toc-text\">5.What is Encapsulation? 封装</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6-What-is-Inheritance-%E7%BB%A7%E6%89%BF\"><span class=\"toc-text\">6.What is Inheritance 继承</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7-What-is-a-Constructor\"><span class=\"toc-text\">7.What is a Constructor?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8-What-is-the-difference-between-an-Interface-and-an-Abstract-class\"><span class=\"toc-text\">8.What is the difference between an Interface and an Abstract class?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-What-is-the-purpose-of-a-Volatile-Variable\"><span class=\"toc-text\">9.What is the purpose of a Volatile Variable</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#10-Explain-the-available-thread-states-in-a-high-level\"><span class=\"toc-text\">10.Explain the available thread states in a high-level.</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#11-what-is-necessary-Conditions-of-Deadlock\"><span class=\"toc-text\">11.what is necessary Conditions of Deadlock</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#12-What-is-the-purpose-of-garbage-collection-in-Java-and-when-is-it-used\"><span class=\"toc-text\">12.What is the purpose of garbage collection in Java, and when is it used</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#13-synchronized\"><span class=\"toc-text\">13.synchronized</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#14-MySQL-ACID\"><span class=\"toc-text\">14.MySQL ACID</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#JVM\"><span class=\"toc-text\">JVM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-What-is-the-difference-between-JVM-JRE-and-JDK\"><span class=\"toc-text\">1.What is the difference between JVM, JRE and JDK</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-What-is-JRE\"><span class=\"toc-text\">2.What is JRE?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-What-is-JDK\"><span class=\"toc-text\">3.What is JDK</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-What-are-Java-class-loaders-What-are-the-key-features-of-Java-class-loader\"><span class=\"toc-text\">4.What are Java class loaders? What are the key features of Java class loader</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-What-are-the-benefits-and-negatives-of-the-garbage-collector\"><span class=\"toc-text\">5.What are the benefits and negatives of the garbage collector</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-What-is-%E2%80%9Cstop-the-world%E2%80%9D\"><span class=\"toc-text\">6.What is “stop the world”</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-What-is-new-generation\"><span class=\"toc-text\">7.What is new generation</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-collector\"><span class=\"toc-text\">8.collector</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CICD\"><span class=\"toc-text\">CICD</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#CI-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%EF%BC%88Continuous-Integration%EF%BC%89\"><span class=\"toc-text\">CI 持续集成（Continuous Integration）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#CD-%E6%8C%81%E7%BB%AD%E4%BA%A4%E4%BB%98%EF%BC%88Continuous-Delivery%EF%BC%89\"><span class=\"toc-text\">CD 持续交付（Continuous Delivery）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#What-are-the-benefits-of-CI-CD\"><span class=\"toc-text\">What are the benefits of CI&#x2F;CD?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#What-is-Agile\"><span class=\"toc-text\">What is Agile</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%E4%BA%94%E5%A4%A7%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">敏捷开发五大工作</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFTDD%EF%BC%88%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%EF%BC%89\"><span class=\"toc-text\">什么是TDD（测试驱动开发）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#WHAT-IS-SCRUM\"><span class=\"toc-text\">WHAT IS SCRUM?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#SCURM-rule\"><span class=\"toc-text\">SCURM rule</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Design-Patterns\"><span class=\"toc-text\">Design Patterns</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#What-is-Design-Patterns\"><span class=\"toc-text\">What is Design Patterns?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Types-of-Design-Patterns\"><span class=\"toc-text\">Types of Design Patterns</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Design-Pattern-Factory-Pattern\"><span class=\"toc-text\">Design Pattern - Factory Pattern</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Design-Pattern-Abstract-Factory-Pattern\"><span class=\"toc-text\">Design Pattern - Abstract Factory Pattern</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Design-Pattern-Singleton-Pattern\"><span class=\"toc-text\">Design Pattern - Singleton Pattern</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Design-Pattern-Builder-Pattern\"><span class=\"toc-text\">Design Pattern - Builder Pattern</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Design-Patterns-Adapter-Pattern\"><span class=\"toc-text\">Design Patterns - Adapter Pattern</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Design-Patterns-Proxy-Pattern\"><span class=\"toc-text\">Design Patterns - Proxy Pattern</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Design-Patterns-Strategy-Pattern\"><span class=\"toc-text\">Design Patterns - Strategy Pattern</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Design-Patterns-Strategy-Pattern-1\"><span class=\"toc-text\">Design Patterns - Strategy Pattern</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SOLID-principles\"><span class=\"toc-text\">SOLID principles</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E9%97%AE\"><span class=\"toc-text\">反问</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-What-challenges-will-I-encounter-in-this-position\"><span class=\"toc-text\">1.What challenges will I encounter in this position</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%AF%8D%E5%8F%91%E9%9F%B3\"><span class=\"toc-text\">单词发音</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"英文HR问题","uid":"e553701e824962b098d31ab72c61c499","slug":"english behavior questions","date":"2021-06-05T11:16:08.000Z","updated":"2022-09-15T14:22:17.544Z","comments":true,"path":"api/articles/english behavior questions.json","keywords":null,"cover":null,"text":"Software engineer behavioral interview questions1. How do you respond when you disagree with a coworker?I think the best way is commanicatio...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"面试","slug":"面试","count":3,"path":"api/tags/面试.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"ActiveMQ整合SpringBoot","uid":"a4246540661d717dae121d955eded9b9","slug":"ActiveMQ整合SpringBoot","date":"2021-05-03T21:16:08.000Z","updated":"2022-09-15T14:22:17.512Z","comments":true,"path":"api/articles/ActiveMQ整合SpringBoot.json","keywords":null,"cover":null,"text":"ActiveMQ 整合 SpringBoot引入 activemq 依赖&lt;dependency> &lt;groupId>org.springframework.boot&lt;/groupId> &lt;artifactId>spring-boot-starter-act...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"中间件","slug":"中间件","count":5,"path":"api/tags/中间件.json"},{"name":"ActiveMQ","slug":"ActiveMQ","count":1,"path":"api/tags/ActiveMQ.json"},{"name":"使用心得","slug":"使用心得","count":2,"path":"api/tags/使用心得.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}