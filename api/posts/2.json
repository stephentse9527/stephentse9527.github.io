{"total":33,"pageSize":12,"pageCount":3,"data":[{"title":"Scurm笔记","uid":"8aa5caddac1db643c41479b403f9dcc5","slug":"scurm笔记","date":"2021-06-21T11:16:08.000Z","updated":"2022-09-15T14:22:17.556Z","comments":true,"path":"api/articles/scurm笔记.json","cover":null,"text":"Scurm笔记Scurm是一个敏捷开发框架，是一个增量的、迭代的开发过程，在这个框架中，整个开发周期包括若干个小的迭代周期， 称为Sprint,每个Sprint的建议周期在2～4周，使用BackLog 来管理产品或者项目的需求 backlog是一个案子中商业价值排序的需求列表，S...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"面试","slug":"面试","count":3,"path":"api/tags/面试.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"英文HR问题","uid":"e553701e824962b098d31ab72c61c499","slug":"english behavior questions","date":"2021-06-05T11:16:08.000Z","updated":"2022-09-15T14:22:17.544Z","comments":true,"path":"api/articles/english behavior questions.json","cover":null,"text":"Software engineer behavioral interview questions1. How do you respond when you disagree with a coworker?I think the best way is commanicatio...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"面试","slug":"面试","count":3,"path":"api/tags/面试.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"英文面试合集","uid":"727fdd30d270ab93f20b48b627af8396","slug":"英文面试合集","date":"2021-06-05T11:16:08.000Z","updated":"2022-09-15T14:22:17.564Z","comments":true,"path":"api/articles/英文面试合集.json","cover":null,"text":"英文面试合集自我介绍Good afternon sir&#x2F;madam, it&#39;s my pleasure to introduce myself. My name&#39;s Xiehuake, In the summer of 2021, I graduated...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[],"tags":[{"name":"面试","slug":"面试","count":3,"path":"api/tags/面试.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"ActiveMQ整合SpringBoot","uid":"a4246540661d717dae121d955eded9b9","slug":"ActiveMQ整合SpringBoot","date":"2021-05-03T21:16:08.000Z","updated":"2022-09-15T14:22:17.512Z","comments":true,"path":"api/articles/ActiveMQ整合SpringBoot.json","cover":null,"text":"ActiveMQ 整合 SpringBoot引入 activemq 依赖&lt;dependency> &lt;groupId>org.springframework.boot&lt;/groupId> &lt;artifactId>spring-boot-starter-act...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"中间件","slug":"中间件","count":5,"path":"api/tags/中间件.json"},{"name":"ActiveMQ","slug":"ActiveMQ","count":1,"path":"api/tags/ActiveMQ.json"},{"name":"使用心得","slug":"使用心得","count":2,"path":"api/tags/使用心得.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"不同中间件的高并发架构","uid":"1b5a7d45e32f32d8b53151bc92581ac8","slug":"不同中间件的高并发架构","date":"2021-05-03T21:13:48.000Z","updated":"2022-09-15T14:22:17.560Z","comments":true,"path":"api/articles/不同中间件的高并发架构.json","cover":[],"text":"不同中间件的高并发MySQL的高并发对于高并发阶段，MySQL 要做的就是基于主从复制架构，进行读写分离 MySQL主从复制的原理主库将变更写入 binlog 日志，然后从库连接到主库之后，从库有一个 IO 线程，将主库的 binlog 日志拷贝到自己本地，写入一个 relay ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"系统设计","slug":"系统设计","count":2,"path":"api/tags/系统设计.json"},{"name":"高并发","slug":"高并发","count":1,"path":"api/tags/高并发.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MySQL之索引底层原理","uid":"8cad178e2e225e1e2dd25040facb3e5a","slug":"MySQL之索引底层原理","date":"2021-05-03T21:08:22.000Z","updated":"2022-09-15T14:22:17.520Z","comments":true,"path":"api/articles/MySQL之索引底层原理.json","cover":[],"text":"InnoDB 页结构页是MySQL管理存储空间的基本单位，一个页的大小一般是16KB，记录是被存放在页中的，如果记录占用的空间太大还可能造成行溢出现象，这会导致一条记录被分散存储在多个页中。 页的本质就是一块16KB大小的存储空间，InnoDB为了不同的目的而把页分为不同的类型，...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"底层原理","slug":"底层原理","count":4,"path":"api/tags/底层原理.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"RabbitMQ整合SpringBoot","uid":"9fff64f3cbe68428f83c74019add044a","slug":"RabbitMQ整合SpringBoot","date":"2021-05-03T21:03:59.000Z","updated":"2022-09-15T14:22:17.532Z","comments":true,"path":"api/articles/RabbitMQ整合SpringBoot.json","cover":[],"text":"RabbitMQ的使用 在 Rabbitmq 的模型中，Server 中会包含很多个虚拟主机 Virtual Host ，这就类似于数据库中的库，用来和项目做一一的映射，不同的项目建立不同的主机，达到隔离每个项目的目的。 所以在创建项目前先创建一个主机 在 RabbitMQ 中创...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"中间件","slug":"中间件","count":5,"path":"api/tags/中间件.json"},{"name":"使用心得","slug":"使用心得","count":2,"path":"api/tags/使用心得.json"},{"name":"RabbitMQ","slug":"RabbitMQ","count":1,"path":"api/tags/RabbitMQ.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Synchronized关键字底层原理","uid":"e70e2ff17ca94471876ef71091a97a2a","slug":"Synchronized关键字底层原理","date":"2021-05-03T20:50:19.000Z","updated":"2022-09-15T14:22:17.536Z","comments":true,"path":"api/articles/Synchronized关键字底层原理.json","cover":[],"text":"Synchronized 关键字底层原理其实在 jdk1.6 之前的 synchronized 锁都是重量级锁，从 jdk1.6 开始对锁进行了优化，加入了从无锁-偏向锁-轻量级锁-自旋-重量级锁的升级流程，锁的状态都保存在对象的对象头中，所以需要了解Java对象头 理解Java...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"},{"name":"多线程","slug":"多线程","count":3,"path":"api/tags/多线程.json"},{"name":"底层原理","slug":"底层原理","count":4,"path":"api/tags/底层原理.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"中间件高可用知识点","uid":"33521bd94ee66cdecae1afca83643ee9","slug":"中间件高可用知识点","date":"2021-05-03T20:47:18.000Z","updated":"2022-09-15T14:22:17.560Z","comments":true,"path":"api/articles/中间件高可用知识点.json","cover":null,"text":"不同中间件的高可用架构RabbitMQ高可用 RabbitMQ 是比较有代表性的，因为是基于主从（非分布式）做高可用性的，我们就以 RabbitMQ 为例子讲解第一种 MQ 的高可用性怎么实现 RabbitMQ 有三种模式：单机模式、普通集群模式、镜像集群模式。 单机模式，就是 ...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"系统设计","slug":"系统设计","count":2,"path":"api/tags/系统设计.json"},{"name":"高可用","slug":"高可用","count":1,"path":"api/tags/高可用.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"操作系统之IO多路复用详解","uid":"6cd30b54600ff936f0e357293094df28","slug":"操作系统之IO多路复用详解","date":"2021-05-03T20:44:59.000Z","updated":"2022-09-15T14:22:17.560Z","comments":true,"path":"api/articles/操作系统之IO多路复用详解.json","cover":null,"text":"用户空间与内核空间操作系统为了保证内核安全，将内存空间分为两部分：用户空间和内核空间，用户的程序都运行在用户空间上，而对于管理系统的进程，内存，设备，文件等操作，都只能由运行在内核空间的核心进程来进行 文件描述符fd文件描述符（File descriptor）是一个用于表述指向文...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"计算机基础","slug":"计算机基础","count":4,"path":"api/tags/计算机基础.json"},{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"操作系统之死锁","uid":"2ef40044afb1f095a6625b5d86ae265d","slug":"操作系统之死锁","date":"2021-05-03T20:43:12.000Z","updated":"2022-09-15T14:22:17.564Z","comments":true,"path":"api/articles/操作系统之死锁.json","cover":[],"text":"死锁产生的条件 互斥：一个临界资源只能同时被一个进程所占有 不可抢占：一个进程获取的资源只能由这个线程主动释放，不能被抢占 占有且等待：一个进程占有某些资源，并尝试去获取被其他进程占有的其他的资源 循环等待：进程等待形成环形等待链，每个进程都占有着上一个进程想要获取的资源，并且等...","link":"","photos":[],"count_time":{"symbolsCount":682,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"计算机基础","slug":"计算机基础","count":4,"path":"api/tags/计算机基础.json"},{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"操作系统之内存管理","uid":"c48274d266bd8fce81f6183578ffb524","slug":"操作系统之内存管理","date":"2021-05-03T20:40:59.000Z","updated":"2022-09-15T14:22:17.560Z","comments":true,"path":"api/articles/操作系统之内存管理.json","cover":[],"text":"逻辑地址和物理地址在进程当中，地址是从0号单元开始编址的，这叫做进程的逻辑地址 而物理地址是指的内存中物理单元的位置，进程在运行时执行指令和访问数据，最后都要通过物理地址从主存当中获取，而逻辑地址和物理地址的转换称为地址重定位 内存保护系统需要保护用户进程不受其他用户进程的影响，...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"计算机基础","slug":"计算机基础","count":4,"path":"api/tags/计算机基础.json"},{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}