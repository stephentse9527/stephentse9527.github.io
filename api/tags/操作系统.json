{"name":"操作系统","slug":"操作系统","count":3,"postlist":[{"title":"操作系统之IO多路复用详解","uid":"6cd30b54600ff936f0e357293094df28","slug":"操作系统之IO多路复用详解","date":"2021-05-03T20:44:59.000Z","updated":"2022-09-15T14:22:17.560Z","comments":true,"path":"api/articles/操作系统之IO多路复用详解.json","keywords":null,"cover":null,"text":"用户空间与内核空间操作系统为了保证内核安全，将内存空间分为两部分：用户空间和内核空间，用户的程序都运行在用户空间上，而对于管理系统的进程，内存，设备，文件等操作，都只能由运行在内核空间的核心进程来进行 文件描述符fd文件描述符（File descriptor）是一个用于表述指向文...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"计算机基础","slug":"计算机基础","count":4,"path":"api/tags/计算机基础.json"},{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"操作系统之内存管理","uid":"c48274d266bd8fce81f6183578ffb524","slug":"操作系统之内存管理","date":"2021-05-03T20:40:59.000Z","updated":"2022-09-15T14:22:17.560Z","comments":true,"path":"api/articles/操作系统之内存管理.json","keywords":null,"cover":[],"text":"逻辑地址和物理地址在进程当中，地址是从0号单元开始编址的，这叫做进程的逻辑地址 而物理地址是指的内存中物理单元的位置，进程在运行时执行指令和访问数据，最后都要通过物理地址从主存当中获取，而逻辑地址和物理地址的转换称为地址重定位 内存保护系统需要保护用户进程不受其他用户进程的影响，...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"计算机基础","slug":"计算机基础","count":4,"path":"api/tags/计算机基础.json"},{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"操作系统之死锁","uid":"2ef40044afb1f095a6625b5d86ae265d","slug":"操作系统之死锁","date":"2021-05-03T20:43:12.000Z","updated":"2022-09-15T14:22:17.564Z","comments":true,"path":"api/articles/操作系统之死锁.json","keywords":null,"cover":[],"text":"死锁产生的条件 互斥：一个临界资源只能同时被一个进程所占有 不可抢占：一个进程获取的资源只能由这个线程主动释放，不能被抢占 占有且等待：一个进程占有某些资源，并尝试去获取被其他进程占有的其他的资源 循环等待：进程等待形成环形等待链，每个进程都占有着上一个进程想要获取的资源，并且等...","link":"","photos":[],"count_time":{"symbolsCount":682,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"计算机基础","slug":"计算机基础","count":4,"path":"api/tags/计算机基础.json"},{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"谢华客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"记录一些笔记和心情的地方","socials":{"github":"https://github.com/stephentse9527","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}